# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2016-04-21 04:14
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='County',
            fields=[
                ('gid', models.AutoField(primary_key=True, serialize=False)),
                ('stfips', models.CharField(blank=True, max_length=2, null=True)),
                ('ctfips', models.CharField(blank=True, max_length=5, null=True)),
                ('state', models.CharField(blank=True, max_length=66, null=True)),
                ('county', models.CharField(blank=True, max_length=66, null=True)),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=4316)),
            ],
            options={
                'db_table': 'county',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GeocodedPollingLocation',
            fields=[
                ('precinctid', models.AutoField(primary_key=True, serialize=False, verbose_name=b'Precinct ID')),
                ('precinctcode', models.CharField(blank=True, max_length=120, null=True, verbose_name=b'Precinct Code')),
                ('precinctname', models.CharField(blank=True, max_length=300, null=True, verbose_name=b'Precinct Name')),
                ('addr', models.CharField(blank=True, max_length=150, null=True, verbose_name=b'Address')),
                ('city', models.CharField(blank=True, max_length=150, null=True)),
                ('state', models.CharField(blank=True, max_length=6, null=True)),
                ('zip', models.CharField(blank=True, max_length=15, null=True)),
                ('pollinglocation', models.CharField(blank=True, max_length=300, null=True, verbose_name=b'Polling Location')),
                ('pollinglocationdescription', models.CharField(blank=True, max_length=240, null=True, verbose_name=b'Polling Location Description')),
                ('cass_address', models.TextField(blank=True, null=True)),
                ('cass_address_type', models.CharField(blank=True, max_length=1, null=True)),
                ('cass_carrier_route', models.CharField(blank=True, max_length=4, null=True)),
                ('cass_city', models.CharField(blank=True, max_length=128, null=True)),
                ('cass_dpv', models.CharField(blank=True, max_length=1, null=True)),
                ('cass_dpvfootnotes', models.CharField(blank=True, max_length=16, null=True)),
                ('cass_housenumber', models.CharField(blank=True, max_length=64, null=True)),
                ('cass_postdir', models.CharField(blank=True, max_length=2, null=True)),
                ('cass_predir', models.CharField(blank=True, max_length=2, null=True)),
                ('cass_result_code', models.CharField(blank=True, max_length=64, null=True)),
                ('cass_state', models.CharField(blank=True, max_length=2, null=True)),
                ('cass_streetname', models.CharField(blank=True, max_length=128, null=True)),
                ('cass_streettype', models.CharField(blank=True, max_length=16, null=True)),
                ('cass_timezone', models.CharField(blank=True, max_length=64, null=True)),
                ('cass_unit', models.CharField(blank=True, max_length=64, null=True)),
                ('cass_unittype', models.CharField(blank=True, max_length=16, null=True)),
                ('cass_vacancy', models.CharField(blank=True, max_length=1, null=True)),
                ('cass_zip4', models.CharField(blank=True, max_length=4, null=True)),
                ('cass_zip5', models.CharField(blank=True, max_length=5, null=True)),
                ('tsmart_census_id', models.CharField(blank=True, max_length=64, null=True)),
                ('tsmart_geocode_level', models.CharField(blank=True, max_length=64, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('geocode_failure', models.CharField(blank=True, max_length=1000, null=True)),
                ('geom', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
            ],
            options={
                'db_table': 'geocoded_polling_locations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IncidentReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner_name', models.CharField(max_length=128)),
                ('owner_email', models.EmailField(max_length=128)),
                ('owner_phone', models.CharField(max_length=128)),
                ('reporter_name', models.CharField(max_length=128)),
                ('reporter_phone', models.CharField(max_length=128)),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('scope', models.IntegerField(choices=[(1, b'One Voter'), (3, b'Some Voters'), (5, b'Precinct'), (10, b'Polling Place'), (20, b'County'), (50, b'State')])),
                ('nature', models.CharField(choices=[(b'ballots', b'Ballots'), (b'check-in', b'Check-In'), (b'machines', b'Machines'), (b'registration', b'Registration'), (b'site', b'Site'), (b'challenge-intimigation', b'Challenge / Intimidation'), (b'id-issues', b'ID Issues'), (b'17-yo-voting', b'17 Year Old Voting')], max_length=32)),
                ('description', models.TextField(blank=True)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('polling_location', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.CASCADE, to='vincent.GeocodedPollingLocation')),
            ],
        ),
    ]
